version: 2.0.0
dft_job: 10 #The number of tasks submitted when calculating single-point energy with DFT.
#所有任务提交的根目录
gpumd_split_job: temperature  #Split gpumd tasks by temperature or structure
work_path: ./cache  #Root directory for all task submissions.
current_job: nep  #If the current_job has three states: nep, gpumd, dft, and if train.xyz has not been calculated, set it to vasp; otherwise, directly set it to use nep to train the potential function, or use gpumd.
generation: 1  #Marking resume tasks.
init_train_xyz: ./train.xyz  #Initial training set; if not calculated, set current_job to vasp.
init_nep_txt: ./nep.txt  #If current_job is set to gpumd, a potential function must be provided; otherwise, it can be ignored.
nep:
  #Does it support restarting? If true, the potential function for the next step will continue from this step for nep_restart_step steps.
  #The program will automatically set lambda_1 to 0.
  #If false, retrain from scratch every time.
  nep_restart: true
  nep_restart_step: 20000
  #Optional; if you need to modify the number of steps, simply provide a file in the current path.
  #If there is no such file, the number of steps will be automatically generated based on the training set.
  nep_in_path: ./nep.in
  #Optional
  test_xyz_path: test.xyz
  machine:
    #https://docs.deepmodeling.com/projects/dpdispatcher/en/latest/context.html
    context_type: LazyLocal
    #https://docs.deepmodeling.com/projects/dpdispatcher/en/latest/batch.html
    batch_type: Slurm
    local_root: ./
    remote_root: ~/neptrain/
    remote_profile:
      hostname: ''
      username: ''
      key_filename: ''
      port: 22


  resources:
    number_node: 1
    gpu_per_node: 1
    queue_name: 8V100
    group_size: 1
    custom_flags:
    - '#SBATCH --qos=normal'
    - '#SBATCH --job-name=NepTrain-NEP'

    prepend_script:
    - module load gpumd/4.2.0



dft:
  software: vasp #you can switch vasp or abacus
  cpu_core: 1
  kpoints_use_gamma: true  #ASE defaults to using M-point k-mesh, but here we default to using the gamma-centered grid; this can be set to false.

  incar_path: auto  #A path should be passed in. If it is auto, the corresponding file name will be switched according to the software, such as INCAR or INPUT

  use_k_stype: kspacing
  #--ka
  kpoints:
  - 20   #a
  - 20   #b
  - 20   #c
  kspacing: 0.2
  machine:
    context_type: LazyLocal
    batch_type: Slurm
    local_root: ./
    remote_root: ~/neptrain/
    remote_profile:
      hostname: ''
      username: ''
      key_filename: ''
      port: 22


  resources:
    number_node: 1
    gpu_per_node: 1
    queue_name: 8V100
    group_size: 1
    custom_flags:
    - '#SBATCH --qos=normal'
    - '#SBATCH --job-name=NepTrain-NEP'

    prepend_script:
    - module load vasp/6.4.2-nvhpc24.3-ompi5.0.7



gpumd:
#Time for iterative progressive learning in units of picoseconds.
#The first active learning is at 10ps, the second at 100ps, with a total of four active learning sessions.
  step_times:
  - 100
  - 500
  - 1000
  - 5000
#Each time active learning is performed, all structures in model_path will undergo molecular dynamics (MD) simulations at the following temperatures, followed by sampling.
  temperature_every_step:
  - 0.1
  - 100
  - 200
  - 300
  - 400
  - 500
  - 600
  model_path: ./structure
  run_in_path: ./run.in

  machine:
    context_type: LazyLocal
    batch_type: Slurm
    local_root: ./
    remote_root: ~/neptrain/
    remote_profile:
      hostname: ''
      username: ''
      key_filename: ''
      port: 22


  resources:
    number_node: 1
    gpu_per_node: 1
    queue_name: 8V100
    group_size: 1
    custom_flags:
    - '#SBATCH --qos=normal'
    - '#SBATCH --job-name=NepTrain-NEP'

    prepend_script:
    - module load gpumd/4.2.0


select:
  #After completing this round of MD, a maximum of max_selected structures will be selected from all trajectories.
  max_selected: 60
  min_distance: 0.01   #Hyperparameters for farthest point sampling
  filter: 0.6    #Passing a coefficient enables bond length detection, and bonds shorter than the sum of the covalent radii multiplied by the coefficient are considered unphysical structures.
  machine:
    context_type: LazyLocal
    batch_type: Slurm
    local_root: ./
    remote_root: ~/neptrain/
    remote_profile:
      hostname: ''
      username: ''
      key_filename: ''
      port: 22


  resources:
    #Select mainly uses CPU
    number_node: 1
    gpu_per_node: 1
    queue_name: 8V100
    group_size: 1
    custom_flags:
    - '#SBATCH --qos=normal'
    - '#SBATCH --job-name=NepTrain-select'

    prepend_script:
    - source /opt/envs/anaconda3.env
    - conda activate neptrain


limit:
  force: 20  #Limit the force of the structure to between -force and force
